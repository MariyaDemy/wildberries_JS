(()=>{"use strict";var __webpack_modules__={220:()=>{eval('\n;// CONCATENATED MODULE: ./src/modules/search.js\nconst search = () => {\r\n    const input = document.querySelector(\'.search-block > input\');\r\n    const searchBtn = document.querySelector(\'.search-block > button\');\r\n\r\n    const renderGoods = (goods) => {\r\n        const goodsContainer = document.querySelector(\'.long-goods-list\');\r\n\r\n        goodsContainer.innerHTML = \'\';\r\n\r\n        goods.forEach((good) => {\r\n            const goodBlock = document.createElement(\'div\');\r\n            goodBlock.classList.add(\'col-lg-3\');\r\n            goodBlock.classList.add(\'col-sm-6\');\r\n            goodBlock.innerHTML = `\r\n                <div class="goods-card">\r\n                    <span class="label ${good.label ? \'null\' : \'d-none\'}">${good.label}</span>\r\n                    <img src="db/${good.img}" alt="${good.name}" class="goods-image">\r\n                    <h3 class="goods-title">${good.name}</h3>\r\n                    <p class="goods-description">${good.description}</p>\r\n                    <button class="button goods-card-btn add-to-cart" data-id="${good.id}">\r\n                        <span class="button-price">${\'$\' + good.price}</span>\r\n                    </button>\r\n                </div>\r\n            `\r\n            goodsContainer.append(goodBlock)\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const getData = (value) => {\r\n        fetch(\'https://wildberriesjs-b8f72-default-rtdb.firebaseio.com/db.json\')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n\r\n                const array = data.filter(good => {\r\n                    return good.name.toLowerCase().includes(value.toLowerCase())\r\n                });\r\n\r\n                localStorage.setItem(\'goods\', JSON.stringify(array));\r\n\r\n                if (window.location.pathname !== "/goods.html") {\r\n                    window.location.href = \'/goods.html\'\r\n                } else {\r\n                    renderGoods(array);\r\n                }\r\n            })\r\n    }\r\n\r\n    // possible errors handling\r\n    try {\r\n        const showValue = function (e) {\r\n            console.log(input.value);\r\n            getData(input.value)\r\n        };\r\n\r\n        searchBtn.addEventListener(\'click\', showValue);\r\n\r\n    } catch (error) {\r\n        console.error(error.message)\r\n    }\r\n\r\n}\n;// CONCATENATED MODULE: ./src/modules/cart.js\nconst cart = function () {\r\n    const cartBtn = document.querySelector(\'.button-cart\')\r\n    const cart = document.getElementById(\'modal-cart\');\r\n    const closeBtn = cart.querySelector(\'.modal-close\');\r\n    const goodsContainer = document.querySelector(\'.long-goods-list\');\r\n    const cartTable = document.querySelector(".cart-table__goods");\r\n    const modalForm = document.querySelector(".modal-form");\r\n    const totalPrice = document.querySelector(".card-table__total");\r\n    const nameInput = document.querySelector(\'[name="nameCustomer"]\');\r\n    const phoneInput = document.querySelector("[name=\'phoneCustomer\']");\r\n\r\n    // Сохранить товары в localStorage\r\n    const addToCart = (id) => {\r\n        const goods = JSON.parse(localStorage.getItem(\'goods\'));\r\n        const clickedGood = goods.find(good => good.id === id);\r\n        const cart = localStorage.getItem(\'cart\') ?\r\n            JSON.parse(localStorage.getItem(\'cart\')) : []\r\n\r\n        // Добавить элемент в корзину (else) либо вернуть количество нажатых на него раз\r\n        if (cart.some(good => good.id === clickedGood.id)) {\r\n            cart.map((good) => {\r\n                if (good.id === clickedGood.id) {\r\n                    good.count++;\r\n                }\r\n                return good;\r\n            });\r\n        } else {\r\n            clickedGood.count = 1;\r\n            cart.push(clickedGood)\r\n        }\r\n\r\n        // Хранение товара в корзине\r\n        localStorage.setItem(\'cart\', JSON.stringify(cart));\r\n    };\r\n\r\n    // Удалить товар из корзины\r\n    const deleteCartItem = (id) => {\r\n        const cart = JSON.parse(localStorage.getItem("cart"));\r\n\r\n        const newCart = cart.filter((good) => {\r\n            return good.id !== id;\r\n        });\r\n\r\n        // Сохранить обновлённые данные и перерисовать корзину\r\n        localStorage.setItem("cart", JSON.stringify(newCart));\r\n        renderCartGoods(JSON.parse(localStorage.getItem("cart")));\r\n    };\r\n\r\n    // Увеличить количество товара в корзине\r\n    const plusCartItem = (id) => {\r\n        const cart = JSON.parse(localStorage.getItem("cart"));\r\n\r\n        const newCart = cart.map((good) => {\r\n            if (good.id === id) {\r\n                good.count++;\r\n            }\r\n            return good;\r\n        });\r\n\r\n        localStorage.setItem("cart", JSON.stringify(newCart));\r\n        renderCartGoods(JSON.parse(localStorage.getItem("cart")));\r\n    };\r\n\r\n    // Уменьшить количество товара в корзине\r\n    const minusCartItem = (id) => {\r\n        const cart = JSON.parse(localStorage.getItem("cart"));\r\n\r\n        const newCart = cart.map((good) => {\r\n            if (good.id === id) {\r\n                if (good.count > 0) {\r\n                    good.count--;\r\n                }\r\n            }\r\n            return good;\r\n        });\r\n\r\n        localStorage.setItem("cart", JSON.stringify(newCart));\r\n        renderCartGoods(JSON.parse(localStorage.getItem("cart")));\r\n    };\r\n\r\n    // Отрисовать элементы товаров в корзине\r\n    const renderCartGoods = (goods) => {\r\n        //Обновить всё, что было в cartTable\r\n        cartTable.innerHTML = ``;\r\n\r\n        goods.forEach((good) => {\r\n            const tr = document.createElement("tr");\r\n            tr.innerHTML = `\r\n\t\t\t\t\t\t<td>${good.name}</td>\r\n\t\t\t\t\t\t<td>$${good.price}</td>\r\n\t\t\t\t\t\t<td><button class="cart-btn-minus"">-</button></td>\r\n\t\t\t\t\t\t<td>${good.count}</td>\r\n\t\t\t\t\t\t<td><button class=" cart-btn-plus"">+</button></td>\r\n\t\t\t\t\t\t<td data-totalPrice="">$${+good.price * +good.count}</td>\r\n\t\t\t\t\t\t<td><button class="cart-btn-delete"">x</button></td>\r\n\t\t\t`;\r\n            cartTable.append(tr);\r\n\r\n            // События на кнопках в корзине\r\n            tr.addEventListener("click", (event) => {\r\n                if (event.target.classList.contains("cart-btn-minus")) {\r\n                    minusCartItem(good.id);\r\n                } else if (event.target.classList.contains("cart-btn-plus")) {\r\n                    plusCartItem(good.id);\r\n                } else if (event.target.classList.contains("cart-btn-delete")) {\r\n                    deleteCartItem(good.id);\r\n                }\r\n            });\r\n        });\r\n\r\n        // Подсчитать  полную сумму корзины\r\n        let sum = 0;\r\n        goods.forEach(good => {\r\n            const total = good.count * good.price;\r\n            sum = sum + total;\r\n        })\r\n        totalPrice.innerText = `$${sum}`;\r\n    };\r\n\r\n    // Отправить данные формы в корзине (имя, телефон)\r\n    const sendForm = (name, phone) => {\r\n        const cart = localStorage.getItem("cart") ?\r\n            JSON.parse(localStorage.getItem("cart")) : [];\r\n\r\n        fetch("https://jsonplaceholder.typicode.com/posts", {\r\n            method: "POST",\r\n            // тело запроса, куда попадают данные из формы\r\n            body: JSON.stringify({\r\n                cart: cart,\r\n                name: name,\r\n                phone: phone,\r\n            }),\r\n        }).then(() => {\r\n            nameInput.value = "";\r\n            phoneInput.value = "";\r\n            localStorage.removeItem("cart");\r\n            cartTable.innerHTML = ``;\r\n            totalPrice.innerText = `$0`;\r\n        });\r\n    };\r\n\r\n    modalForm.addEventListener("submit", (e) => {\r\n        e.preventDefault();\r\n        const name = nameInput.value;\r\n        const phone = phoneInput.value;\r\n        sendForm(name, phone);\r\n    });\r\n\r\n    // Вызвать модальное окно\r\n    cartBtn.addEventListener("click", () => {\r\n        const cartArray = localStorage.getItem("cart") ?\r\n            JSON.parse(localStorage.getItem("cart")) : [];\r\n\r\n        renderCartGoods(cartArray);\r\n\r\n        cart.style.display = "flex"; //add inline styles\r\n    });\r\n\r\n    // Закрыть модальное окно\r\n    closeBtn.addEventListener("click", () => {\r\n        cart.style.display = ""; // or \'none\'\r\n    });\r\n\r\n    // Закрыть модальное окно по нажатию на область вне окна\r\n    cart.addEventListener("click", (e) => {\r\n        if (!e.target.closest(".modal") && e.target.classList.contains("overlay")) {\r\n            cart.style.display = "";\r\n        }\r\n    });\r\n\r\n    // Функция закрытия окна при нажатии на Escape\r\n    window.addEventListener("keydown", (e) => {\r\n        if (e.key === "Escape") {\r\n            cart.style.display = "";\r\n        }\r\n    });\r\n\r\n    // Функция добавления товара в корзину при нажатии на кнопку с ценой\r\n\r\n    if (goodsContainer) {\r\n        goodsContainer.addEventListener(\'click\', (event) => {\r\n            if (event.target.closest(".add-to-cart")) {\r\n                const buttonToCart = event.target.closest(".add-to-cart");\r\n                const goodId = buttonToCart.dataset.id;\r\n\r\n                addToCart(goodId);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// инкапсуляция кода : переменные в функции доступны только в рамках функции\r\n// в других функциях можно объявлять переменные с такими же названиями\n;// CONCATENATED MODULE: ./src/modules/getGoods.js\nconst getGoods = () => {\r\n\r\n    const links = document.querySelectorAll(\'.navigation-link\');\r\n    const more = document.querySelector(\'.more\');\r\n\r\n    const renderGoods = (goods) => {\r\n        const goodsContainer = document.querySelector(\'.long-goods-list\');\r\n\r\n        goodsContainer.innerHTML = \'\';\r\n\r\n        goods.forEach((good) => {\r\n            const goodBlock = document.createElement(\'div\');\r\n            goodBlock.classList.add(\'col-lg-3\');\r\n            goodBlock.classList.add(\'col-sm-6\');\r\n            goodBlock.innerHTML = `\r\n                <div class="goods-card">\r\n                    <span class="label ${good.label ? \'null\' : \'d-none\'}">${good.label}</span>\r\n                    <img src="db/${good.img}" alt="${good.name}" class="goods-image">\r\n                    <h3 class="goods-title">${good.name}</h3>\r\n                    <p class="goods-description">${good.description}</p>\r\n                    <button class="button goods-card-btn add-to-cart" data-id="${good.id}">\r\n                        <span class="button-price">${\'$\' + good.price}</span>\r\n                    </button>\r\n                </div>\r\n            `\r\n            goodsContainer.append(goodBlock)\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const getData = (value, category) => {\r\n        fetch(\'https://wildberriesjs-b8f72-default-rtdb.firebaseio.com/db.json\')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n\r\n                const array = category ? data.filter((item) => item[category] === value) : data\r\n                // значение в данных с сервера равны тексту ссылок\r\n                // server: gender: Womens + в ссылке текст Womens               \r\n\r\n                localStorage.setItem(\'goods\', JSON.stringify(array));\r\n\r\n                if (window.location.pathname !== "/goods.html") {\r\n                    window.location.href = \'/goods.html\'\r\n                } else {\r\n                    renderGoods(array);\r\n                }\r\n            })\r\n    }\r\n\r\n    links.forEach((link) => {\r\n        link.addEventListener(\'click\', (event) => {\r\n            event.preventDefault();\r\n\r\n            const linkValue = link.textContent;\r\n            const category = link.dataset.field;\r\n\r\n            getData(linkValue, category);\r\n        })\r\n    })\r\n\r\n    if (localStorage.getItem(\'goods\') && window.location.pathname === "/goods.html") {\r\n        renderGoods(JSON.parse(localStorage.getItem(\'goods\')))\r\n    }\r\n\r\n\r\n    if (more) {\r\n        more.addEventListener(\'click\', () => {\r\n            event.preventDefault();\r\n            getData();\r\n        })\r\n    }\r\n\r\n    // localStorage.setItem(\'goods\', JSON.stringify({\r\n    //     name: \'all\'\r\n    // }))\r\n\r\n    // const goods = JSON.parse(localStorage.getItem(\'goods\'));\r\n    // console.log(goods)\r\n\r\n    // localStorage.removeItem(\'goods\');\r\n    // console.log(localStorage);\r\n\r\n\r\n\r\n}\r\n\r\n\r\n// из-за .then код внутри () отработает только тогда, когда все данные точно загрузятся при помощи fetch\r\n// затем только когда все данные конвертируются в json сработает код внутри .then()\n;// CONCATENATED MODULE: ./src/goods.js\n\r\n\r\n\r\n\r\nsearch();\r\ncart();\r\ngetGoods();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///220\n')}},__webpack_exports__={};__webpack_modules__[220]()})();